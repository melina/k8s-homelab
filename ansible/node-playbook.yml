---
- hosts: all
  become: true
  tasks:
    - name: Force ipv4 for apt-get
      shell: echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - git
        - vim
        - dnsutils
        - bash-completion

    - name: Add an apt signing key for Docker
      shell: curl -4fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      args: 
        warn: false

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    
    - name: Disable swap
      command: swapoff -a

    - name: Add an apt signing key for Kubernetes
      shell: curl -4fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      become: true
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet=1.13.1-00
          - kubeadm=1.13.1-00
          - kubectl=1.13.1-00
          - kubernetes-cni=0.6.0-00

    - name : Check if kubeadm init has run 
      stat:
        path: "/etc/kubernetes/kubelet.conf"
      register: kubeadm_join

    # Join the nodes to the Kubernetes cluster
    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777
      when: not kubeadm_join.stat.exists
      run_once: yes

    - name: Join the node to cluster
      become: true 
      command: bash /tmp/join-command.sh
      when: not kubeadm_join.stat.exists
      run_once: yes
  
  handlers:
  - name: docker status
    service: 
      name: docker 
      state: started

    